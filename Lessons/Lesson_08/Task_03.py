"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные
и заполнять список только числами. Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта,
введя, например, команду “stop”. При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""

class userExeptionOnlyInt(Exception):
    errorName = "Входящее значение не число (int/float)"

class inputIntList:
    @staticmethod
    def startInput():
        inputList = list()
        lastInput = None
        while True:
            if lastInput == "stop":
                break
            lastInput = input('Введите числовое значение с типом Int/Float. Если вы хотите прервать ввод введите "stop"\n')
            try:
                if lastInput.isdigit():
                    inputList.append(int(lastInput))
                elif not lastInput.isdigit() and lastInput != "stop":
                    raise userExeptionOnlyInt
            except userExeptionOnlyInt as error:
                print(error.errorName)

        return inputList

newInput = inputIntList.startInput()
print(f"результат ввода \n{newInput}")